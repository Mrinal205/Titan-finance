{"version":3,"sources":["utils/translateTextHelpers.ts","hooks/useI18n.ts","components/UnlockButton.tsx","test.js","views/Presale/components/Divider.tsx","views/Presale/PurchaseModal.tsx","views/Presale/SwapModal.tsx","views/Presale/Presale.tsx"],"names":["variableRegex","getTranslation","translations","translationId","fallback","foundTranslation","find","translation","data","stringId","translatedString","text","includes","stringToReplace","exec","fallbackValueAtIndex","split","replace","replaceDynamicString","useI18n","useContext","TranslationsContext","length","UnlockButton","props","TranslateString","useWallet","connect","reset","onPresentConnectModal","useWalletModal","onClick","style","border","console","log","window","web3","Web3","ethereum","enable","styled","div","theme","colors","textSubtle","xyz","myPFarmTokenAbi","PFarmTokenAbi","chainId","parseInt","process","USDCTokenAbi","usdcAbi","USDCInstance","eth","Contract","contracts","usdc","preFarmInstance","preFarm","Grid","GridItem","ControlStretch","ul","Flex","PurchaseModal","onDismiss","purchaseCallbackData","maticPreVal","account","useState","purchaseInput","setPurcahseInput","finalAmount","setFinalAmount","maticBal","setMaticBal","isDoingTran","setIsDoingTran","getMyBalance","useCallback","a","methods","balanceOf","call","maticBalance","decimals","decimal","maticEtherValue","Number","useEffect","confirmNow","sendAmount","utils","toWei","buypreMax","send","from","res","status","title","color","marginBottom","marginRight","value","onChange","e","target","amount","toFixed","placeholder","disabled","toString","float","className","marginTop","FarmRedeemAbi","myPFarmTokenAbi2","preFarmReedemInstance","preFarmReedem","SwapModal","swapCallbackData","preLithBal","setPreLithBal","userPreLithiumBalance","userPreLithiumBalanceEthValue","fromWei","swappreMaxForMAX","Cards","primary","BaseLayout","mediaQueries","sm","lg","StyledCakeStats","Card","Row","Actions","Presale","userPreLithBal","setUserPreLithBal","setMaticPreVal","preLitRemBal","setPreLitRemBal","allowanceVal","setAllowanceVal","usdcAllowanceVal","setUsdcAllowanceVal","purchaseData","salePrice","maticPreLithium","premaxRemaining","preLithiumBalance","preLithiumBalanceEthValue","preLithiumRemaingBal","preLithiumRemaingBalethValue","getAllownes","allowance","allowanceRes","getUSDCAllownes","approveFun","approve","ethers","constants","MaxUint256","BUSDApproval","useModal","onPresentPurchaseModal","onPresentSwapModal","Page","as","size","mb","fontSize","Divider","bold","fullWidth"],"mappings":"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","file":"static/js/11.23af4763.chunk.js","sourcesContent":["import { useContext } from 'react'\r\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\r\n\r\nconst variableRegex = /%(.*?)%/\r\n\r\nconst replaceDynamicString = (foundTranslation: string, fallback: string) => {\r\n  const stringToReplace = variableRegex.exec(foundTranslation)[0]\r\n  // const indexToReplace = foundTranslation.split(' ').indexOf(stringToReplace)\r\n  const fallbackValueAtIndex = fallback.split(' ')[0]\r\n  return foundTranslation.replace(stringToReplace, fallbackValueAtIndex)\r\n}\r\n\r\nexport const getTranslation = (translations: Array<any>, translationId: number, fallback: string) => {\r\n  const foundTranslation = translations.find((translation) => {\r\n    return translation.data.stringId === translationId\r\n  })\r\n  if (foundTranslation) {\r\n    const translatedString = foundTranslation.data.text\r\n    const includesVariable = translatedString.includes('%')\r\n    if (includesVariable) {\r\n      return replaceDynamicString(translatedString, fallback)\r\n    }\r\n    return translatedString\r\n  }\r\n  return fallback\r\n}\r\n\r\n// TODO: Replace instances where this is called directly with the \"useI18n\" hook.\r\n// Using this directly can lead to errors because \"useContext\" is not preserved between renders\r\n// @see https://reactjs.org/docs/hooks-rules.html\r\nexport const TranslateString = (translationId: number, fallback: string) => {\r\n  const { translations } = useContext(TranslationsContext)\r\n  if (translations[0] === 'error') {\r\n    return fallback\r\n  }\r\n  if (translations.length > 0) {\r\n    return getTranslation(translations, translationId, fallback)\r\n  }\r\n  return fallback\r\n}\r\n","import { useContext } from 'react'\r\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\r\nimport { getTranslation } from '../utils/translateTextHelpers'\r\n\r\nconst useI18n = () => {\r\n  const { translations } = useContext(TranslationsContext)\r\n\r\n  return (translationId: number, fallback: string) => {\r\n    if (translations[0] === 'error') {\r\n      return fallback\r\n    }\r\n    if (translations.length > 0) {\r\n      return getTranslation(translations, translationId, fallback)\r\n    }\r\n    return fallback\r\n  }\r\n}\r\n\r\nexport default useI18n\r\n","import React from 'react'\r\nimport { Button, useWalletModal } from '@pancakeswap-libs/uikit'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\n\r\n\r\n\r\nconst UnlockButton = (props) => {\r\n  const TranslateString = useI18n()\r\n  const { connect, reset } = useWallet()\r\n  const { onPresentConnectModal } = useWalletModal(connect, reset)\r\n\r\n  return (\r\n    <Button onClick={onPresentConnectModal} {...props} style={{border: \"2px solid #fff\"}}>\r\n      {TranslateString(292, 'Unlock Wallet')}\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default UnlockButton\r\n","import Web3 from 'web3';\n\nexport default {\n    'web3' : web,\n    'connect' : connect\n  };\n  \n  function web(){\n    console.log('web3 called');\n    if (window.web3) {\n      window.web3 = new Web3(window.ethereum);\n     }\n     return new Web3(window.web3);\n  }\n  \n  function connect() {\n    window.ethereum.enable();\n  }\n    ","import styled from 'styled-components'\n\nexport default styled.div`\n  background-color: ${({ theme }) => theme.colors.textSubtle};\n  height: 1px;\n  margin: 0 auto 32px;\n  width: 100%;\n`\n","import React, { useEffect, useCallback, useState } from 'react';\nimport { useWeb3React, Web3ReactProvider} from '@web3-react/core';\nimport { Modal, Text, LinkExternal, Flex, Button, Input } from '@pancakeswap-libs/uikit';\nimport styled from 'styled-components'\nimport Web3 from 'web3';\nimport PFarmTokenAbi from 'config/abi/PFarmToken.json';\nimport contracts from 'config/constants/contracts';\nimport { useWallet } from '@binance-chain/bsc-use-wallet';\nimport usdcAbi from '../../config/abi/erc20.json';\nimport xyz from '../../test';\n\nconst web3 = xyz.web3(); // new Web3(new Web3.providers.HttpProvider('https://data-seed-prebsc-1-s1.binance.org:8545/'));\n\nconst myPFarmTokenAbi:any = PFarmTokenAbi;\n\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10);\n\nconst USDCTokenAbi: any = usdcAbi;\nconst USDCInstance = new web3.eth.Contract(USDCTokenAbi, contracts.usdc[chainId]);\n\nconst preFarmInstance = new web3.eth.Contract(myPFarmTokenAbi,contracts.preFarm[chainId]);\n\ninterface PurchaseModalProps { \n  onDismiss?: () => void\n  account : any\n  maticPreVal:any\n  purchaseCallbackData ?: (data) => void\n}\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, auto);\n  grid-template-rows: repeat(4, auto);\n  margin-bottom: 12px;\n`\n\nconst GridItem = styled.div``\n\nconst GridHeaderItem = styled.div`\n  max-width: 180px;\n`\n\nconst BulletList = styled.ul`\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n\n  li {\n    margin: 0;\n    padding: 0;\n  }\n\n  li::before {\n    content: '•';\n    margin-right: 4px;\n  }\n\n  li::marker {\n    font-size: 12px;\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\nconst ControlStretch = styled(Flex)`\n  > div {\n    flex: 1;\n  }\n`\n\nconst PurchaseModal: React.FC<PurchaseModalProps> = ({ onDismiss, purchaseCallbackData, maticPreVal }) => {\n\n  console.log('maticPreVal.....',maticPreVal);\n  // const { account, connector, activate, library } = useWeb3React();\n  const { account }: { account: string; } = useWallet();\n  const [ purchaseInput, setPurcahseInput ] = useState('');\n  const [ finalAmount, setFinalAmount ] = useState(0);\n  const [maticBal, setMaticBal] = useState(0);\n  const [ isDoingTran, setIsDoingTran ] = useState(false);\n  // const { getBalance } = useWeb3Provider();\n\n  const getMyBalance = useCallback(async() => {\n    if (account) {\n        const maticBalance = await USDCInstance.methods.balanceOf(account).call();\n        const decimal = await USDCInstance.methods.decimals().call();\n        const maticEtherValue = Number(maticBalance) / (10 ** Number(decimal));\n        console.log(\"maticEtherValue\",maticEtherValue);\n        setMaticBal(maticEtherValue); \n    }\n    },[account]);\n\n  useEffect(() => {\n    getMyBalance();\n    console.log('maticPreVal:',maticPreVal);\n  }, [getMyBalance, maticPreVal]);\n\n  const confirmNow = async() => {\n    if (purchaseInput) {\n      try {\n        const sendAmount = Number(web3.utils.toWei(purchaseInput,'ether')) / (10 ** 12);\n        console.log('sendAmount:',sendAmount);\n        setIsDoingTran(true);\n        const res = await preFarmInstance.methods.buypreMax(sendAmount).send({from : account});\n        console.log('confirmNow res:',res);\n        purchaseCallbackData(res.status);\n        onDismiss();\n        setIsDoingTran(false); \n      } catch (error) {\n          console.log('confirmNow error:',error)\n        setIsDoingTran(false); \n      }\n    }\n  } \n  \n    return (\n        <Modal title='Buy PreMax with matic' onDismiss={ isDoingTran ? null : onDismiss }>\n        <Grid>\n          <GridItem>\n            <h4 style={{ color: \"white\", marginBottom:15 }} >Purcahse</h4>\n          <ControlStretch style={{ marginRight:20 }} >\n                <Input value={purchaseInput} onChange={(e)=>{ setPurcahseInput(e.target.value); const amount = (Number(e.target.value) / Number(maticPreVal)).toFixed(4); setFinalAmount(Number(amount)) }} placeholder=\"0\" />\n              </ControlStretch>\n          </GridItem>\n          <GridItem>\n          <h4 style={{ color: \"black\", marginBottom:15,  }} >Balance: {maticBal}</h4>\n          <Button disabled={isDoingTran} onClick={()=>{ setPurcahseInput(maticBal.toString()); const amount = (Number(maticBal) / Number(maticPreVal)).toFixed(4); setFinalAmount(Number(amount)) }} >Max</Button>\n          </GridItem>\n          <GridItem>\n            <div style={{marginBottom:20}} >&nbsp;</div>\n            <h2 style={{ float:'right' }} className=\"matClass\">USDC</h2>\n          </GridItem>\n          {/* 7 day row */}\n          <GridItem>\n            <Text style={{ marginTop:10, marginBottom:10 }} >&nbsp;&nbsp;You will get <strong>{finalAmount}</strong> PreMax</Text>\n          </GridItem>\n          <GridItem>&nbsp;</GridItem>\n          <GridItem>&nbsp;</GridItem>\n          <GridItem className=\"button-can\">\n          <Button disabled={isDoingTran} onClick={onDismiss} >Cancel</Button>\n          </GridItem>\n          <GridItem className=\"button-can\">\n            <div>&nbsp;</div>\n          </GridItem>\n          <GridItem className=\"button-can\">\n          <Button disabled={isDoingTran} onClick={confirmNow} className=\"cardback\" >\n            Confirm\n          </Button>\n          </GridItem>\n         \n        </Grid>\n\n      </Modal>\n    )\n}\n\nexport default PurchaseModal;\n","import React, { useEffect, useCallback, useState } from 'react';\nimport { useWeb3React, Web3ReactProvider} from '@web3-react/core';\nimport { Modal, Text, LinkExternal, Flex, Button, Input } from '@pancakeswap-libs/uikit';\nimport styled from 'styled-components'\nimport Web3 from 'web3';\nimport FarmRedeemAbi from 'config/abi/FarmRedeem.json';\nimport PFarmTokenAbi from 'config/abi/PFarmToken.json';\nimport contracts from 'config/constants/contracts';\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport xyz from '../../test'; \n\nconst web3 = xyz.web3(); // new Web3(new Web3.providers.HttpProvider('https://data-seed-prebsc-1-s1.binance.org:8545/'));\n\nconst myPFarmTokenAbi:any = FarmRedeemAbi;\n\nconst myPFarmTokenAbi2:any = PFarmTokenAbi;\n\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10);\n\nconst preFarmReedemInstance = new web3.eth.Contract(myPFarmTokenAbi,contracts.preFarmReedem[chainId]);\n\nconst preFarmInstance = new web3.eth.Contract(myPFarmTokenAbi2,contracts.preFarm[chainId]);\n\ninterface SwapModalProps { \n  onDismiss?: () => void\n  account : any\n  swapCallbackData ?: (data) => void\n}\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, auto);\n  grid-template-rows: repeat(4, auto);\n  margin-bottom: 12px;\n`\n\nconst GridItem = styled.div``\n\nconst GridHeaderItem = styled.div`\n  max-width: 180px;\n`\n\nconst BulletList = styled.ul`\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n\n  li {\n    margin: 0;\n    padding: 0;\n  }\n\n  li::before {\n    content: '•';\n    margin-right: 4px;\n  }\n\n  li::marker {\n    font-size: 12px;\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\nconst ControlStretch = styled(Flex)`\n  > div {\n    flex: 1;\n  }\n`\n\nconst SwapModal: React.FC<SwapModalProps> = ({ onDismiss, swapCallbackData }) => {\n\n    const { account }: { account: string; } = useWallet()\n  const [preLithBal, setPreLithBal] = useState(0);\n  const [ purchaseInput, setPurcahseInput ] = useState('');\n  const [ isDoingTran, setIsDoingTran ] = useState(false);\n\n  // const { getBalance } = useWeb3Provider();\n\n  const getMyBalance = useCallback(async() => {\n    if (account) {\n        const userPreLithiumBalance = await preFarmInstance.methods.balanceOf(account).call();\n        const userPreLithiumBalanceEthValue = Number(Web3.utils.fromWei(userPreLithiumBalance, 'ether'));\n        setPreLithBal(userPreLithiumBalanceEthValue);\n    }\n  },[account]);\n\n  useEffect(() => {\n    // console.log('preFarmReedemInstance:',preFarmReedemInstance);\n    getMyBalance();\n  }, [getMyBalance]);\n\n  const confirmNow = async() => {\n    if (purchaseInput) {\n        try {\n            const sendAmount = web3.utils.toWei(purchaseInput,'ether');\n            setIsDoingTran(true);\n            const res = await preFarmReedemInstance.methods.swappreMaxForMAX().send({from : account});\n            // console.log('confirmNow res:',res);\n            swapCallbackData(res.status);\n            onDismiss();\n            setIsDoingTran(false);   \n        } catch (error) {\n            console.log('confirmNow:',error);\n            setIsDoingTran(false);    \n        }\n    }\n  }\n  \n    return (\n        <Modal title='SWAP MAX' onDismiss={ isDoingTran ? null : onDismiss } >\n        <Grid>\n          <GridItem>\n            <h4 style={{ color: \"white\", marginBottom:15 }} >Purcahse</h4>\n          <ControlStretch style={{ marginRight:20 }} >\n                <Input value={purchaseInput} onChange={(e)=>{ setPurcahseInput(e.target.value); }} placeholder=\"0\" />\n              </ControlStretch>\n          </GridItem>\n          <GridItem>\n          <h4 style={{ color: \"white\", marginBottom:15,  }} >Balance: {preLithBal}</h4>\n          <Button disabled={isDoingTran} onClick={()=>{ setPurcahseInput(preLithBal.toString()) }} >Max</Button>\n          </GridItem>\n          <GridItem>\n            <div style={{marginBottom:20}} >&nbsp;</div>\n            <h2 style={{ float:'right' }} className=\"matClass\"><strong>{preLithBal}</strong> PreMax</h2>\n          </GridItem>\n          {/* 7 day row */}\n          <GridItem className=\"button-can\">\n          <Button onClick={isDoingTran ? null : onDismiss} >Cancel</Button>\n          </GridItem>\n          <GridItem className=\"button-can\">\n            <div>&nbsp;</div>\n          </GridItem>\n          <GridItem className=\"button-can\">\n          <Button disabled={isDoingTran} onClick={confirmNow} className=\"cardback\" >\n            Confirm\n          </Button>\n          </GridItem>\n        </Grid>\n      </Modal>\n    )\n}\n\nexport default SwapModal;\n ","import React, { useState, useEffect, useCallback } from 'react';\nimport Page from 'components/layout/Page';\nimport styled from 'styled-components';\nimport useI18n from 'hooks/useI18n';\nimport { Card, CardBody, Heading, Text, BaseLayout, Button, useModal } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport contracts from 'config/constants/contracts';\nimport Web3 from 'web3';\nimport UnlockButton from 'components/UnlockButton';\nimport { ethers } from 'ethers';\nimport usdcAbi from '../../config/abi/erc20.json';\nimport PFarmTokenAbi from '../../config/abi/PFarmToken.json';\nimport xyz from '../../test';\nimport Divider from './components/Divider';\nimport PurchaseModal from './PurchaseModal';\nimport SwapModal from './SwapModal';\n \nconst web3 = xyz.web3();\n\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10);\n\nconst myPFarmTokenAbi: any = PFarmTokenAbi;\n\nconst USDCTokenAbi: any = usdcAbi;\nconst USDCInstance = new web3.eth.Contract(USDCTokenAbi, contracts.usdc[chainId]);\n\nconst preFarmInstance = new web3.eth.Contract(myPFarmTokenAbi, contracts.preFarm[chainId]);\n\nconst Presale = () => {\n\n  const TranslateString = useI18n();\n  const { account }: { account: string; } = useWallet()\n  const [preLithBal, setPreLithBal] = useState(0);\n  const [userPreLithBal, setUserPreLithBal] = useState(0);\n  const [maticPreVal, setMaticPreVal] = useState('0');\n  const [preLitRemBal, setPreLitRemBal] = useState(0);\n  const [maticBal, setMaticBal] = useState(0);\n  const [allowanceVal, setAllowanceVal] =  useState('0');\n  const [usdcAllowanceVal, setUsdcAllowanceVal] = useState('0');\n\n  const purchaseData = useCallback(async () => {\n    try {\n      if (account) {\n        const maticPreLithium = await preFarmInstance.methods.salePrice().call();\n        console.log('maticPreLithium', maticPreLithium);\n        // const ethValue = Number(Web3.utils.fromWei(maticPreLithium, 'ether'));\n        // const ethValue2 = (Number(Web3.utils.fromWei(ethValue.toString(), 'ether')) * 10).toFixed(4);\n        setMaticPreVal(maticPreLithium);\n\n        const preLithiumBalance = await preFarmInstance.methods.premaxRemaining().call();\n        console.log('preLithiumBalance:',preLithiumBalance);\n        const preLithiumBalanceEthValue = Number(Web3.utils.fromWei(preLithiumBalance, 'ether'));\n        setPreLithBal(preLithiumBalanceEthValue);\n\n        const userPreLithiumBalance = await preFarmInstance.methods.balanceOf(account).call();\n        const userPreLithiumBalanceEthValue = Number(Web3.utils.fromWei(userPreLithiumBalance, 'ether'));\n        setUserPreLithBal(userPreLithiumBalanceEthValue);\n\n        const maticBalance = await USDCInstance.methods.balanceOf(account).call();\n        const decimal = await USDCInstance.methods.decimals().call();\n        const maticEtherValue = Number(maticBalance) / (10 ** Number(decimal));\n        setMaticBal(maticEtherValue);\n\n        const preLithiumRemaingBal = preLithiumBalance;\n        const preLithiumRemaingBalethValue = Number(Web3.utils.fromWei(preLithiumRemaingBal, 'ether'));\n\n        setPreLitRemBal(preLithiumRemaingBalethValue);\n      }\n\n    } catch (error) { \n      console.log(error);\n    }\n  }, [account]);\n\n  const getAllownes = useCallback(async() => {\n    if(account) {\n      const allowanceRes =  await preFarmInstance.methods.allowance(account, contracts.preFarmReedem[chainId]).call();\n      setAllowanceVal(allowanceRes);\n    }\n  },[account]);\n\n  const getUSDCAllownes = useCallback(async()=>{\n    if(account) {\n        const allowanceRes =  await USDCInstance.methods.allowance(account, contracts.preFarm[chainId]).call();\n        setUsdcAllowanceVal(allowanceRes);\n      }\n  },[account]);\n\n\n  useEffect(() => {\n    purchaseData();\n    getAllownes();\n    getUSDCAllownes();\n    // getChainId();\n  }, [purchaseData, getAllownes, getUSDCAllownes]);\n\n  const approveFun = async() => {\n    const res = await preFarmInstance.methods.approve(contracts.preFarmReedem[chainId], ethers.constants.MaxUint256).send({ from : account });\n    getAllownes();\n  }\n\n  const BUSDApproval = async() => {\n    const res = await USDCInstance.methods.approve(contracts.preFarm[chainId], ethers.constants.MaxUint256).send({ from : account });\n    getUSDCAllownes();\n  }\n \n  const purchaseCallbackData = (data) => {\n    console.log('purchaseCallbackData data:',data);\n    if(data) {\n      purchaseData();\n    }\n  }\n\n  const swapCallbackData = (data) => {\n    console.log('swapCallbackData data:',data);\n    if(data) {\n      purchaseData();\n    } \n  }\n\n  const [ onPresentPurchaseModal ] = useModal(\n    <PurchaseModal purchaseCallbackData={purchaseCallbackData} account={account} maticPreVal={maticPreVal} /> ,\n  )\n\n  const [ onPresentSwapModal ] = useModal(\n    <SwapModal swapCallbackData={swapCallbackData} account={account} /> ,\n  )\n\n  const checkAllowance = () => {\n    if(allowanceVal === '0') { return <Button fullWidth onClick={approveFun} >Approve</Button> }\n    return <Button fullWidth onClick={onPresentSwapModal} >Swap</Button>\n  }\n\n  const checkPresaleContract = () =>{\n    if(usdcAllowanceVal === '0') { return <Button fullWidth onClick={BUSDApproval} >Approve</Button> }\n    return <Button onClick={onPresentPurchaseModal} fullWidth >Purchase</Button>\n  }\n \n  return (\n    <div className=\"backbg\">\n      <Page>\n      <div>\n          <Heading as=\"h1\" size=\"xxl\" mb=\"16px\" style={{fontSize: \"40px\"}}>\n             Presale\n          </Heading>\n          {/* <ul>\n                          <li>Stake FARM to revieve dividend payouts.</li>\n                          <li>You can unstake at any time.</li>\n                          <li>Dividends are distributed linearly over the week.</li>\n                      </ul> */}\n        </div>\n        <Divider />\n\n        <div>\n          <Cards>\n            <StyledCakeStats>\n              <CardBody>\n                <Heading size=\"xl\" mb=\"24px\">\n                  PreMAX PRESALE CONTRACT {/* {TranslateString(534, 'Egg Stats')} */}\n                </Heading>\n                <Row>\n                  <Text fontSize=\"14px\">PREMAX Remaining:</Text>\n                  <Text bold>{preLitRemBal}</Text>\n                </Row>\n                <Row>\n                  <Text fontSize=\"14px\">PREMAX/USDC:</Text>\n                  <Text bold>{maticPreVal}</Text>\n                </Row>\n                <Row>\n                  <Text fontSize=\"14px\">Your PREMAX balance:</Text>\n                  <Text bold>{userPreLithBal}</Text>\n                </Row>\n                <Row>\n                  <Text fontSize=\"14px\">Your USDC balance: </Text>\n                  <Text bold>{maticBal}</Text>\n                </Row>\n                <Divider />\n                <Actions>\n                  { !account ? <UnlockButton fullWidth /> : checkPresaleContract() }\n                {/* <Button onClick={onPresentPurchaseModal} fullWidth > Purchase</Button> } */}\n                </Actions>\n              </CardBody>\n            </StyledCakeStats>\n\n\n            <StyledCakeStats>\n              <CardBody>\n                <Heading size=\"xl\" mb=\"24px\">\n                  PreMAX REDEEM CONTRACT{/* {TranslateString(534, 'Egg Stats')} */}\n                </Heading>\n                <Row>\n                  <Text fontSize=\"14px\">Your PREMAX Balance:</Text>\n                  <Text bold>{userPreLithBal}</Text>\n                </Row>\n                <Row>\n                  <Text fontSize=\"14px\">You can swap for up to:</Text>\n                  <Text bold>{userPreLithBal}</Text>\n                </Row>\n                <Row>\n                  <Text fontSize=\"14px\">Rate:</Text>\n                  <Text bold>1 : 1 Swap</Text>\n                </Row>\n                <Row>\n                  <Text fontSize=\"14px\">Your USDC balance</Text>\n                  <Text bold>{maticBal}</Text>\n                </Row>\n                <Divider />\n                <Actions>\n                  { !account ? <UnlockButton fullWidth /> : checkAllowance() }\n                </Actions>\n              </CardBody>\n            </StyledCakeStats>\n          </Cards>\n        </div>\n      </Page>\n    </div>\n  )\n}\n\nconst Hero = styled.div`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.primary};\n  display: grid;\n  grid-gap: 32px;\n  grid-template-columns: 1fr;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 250px;\n  padding: 48px 0;\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n    font-size: 16px;\n    li {\n      margin-bottom: 4px;\n    }\n  }\n  img {\n    height: auto;\n    max-width: 100%;\n  }\n  @media (min-width: 576px) {\n    grid-template-columns: 1fr 1fr;\n    margin: 0;\n    max-width: none;\n  }\n`\nconst Cards = styled(BaseLayout)`\n  align-items: stretch;\n  justify-content: stretch;\n  margin-bottom: 48px;\n\n  & > div {\n    grid-column: span 6;\n    width: 100%;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 8;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    & > div {\n      grid-column: span 6;\n    }\n  }\n`\n\nconst StyledCakeStats = styled(Card)`\n  margin-left: 100;\n  margin-right: 100;\n  background: rgb(0, 24, 60,0.8) !important;\n`\n\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 14px;\n  justify-content: space-between;\n  margin-bottom: 8px;\n`\n\nconst Actions = styled.div`\n  margin-top: 24px;\n`\n\nexport default Presale;\n"],"sourceRoot":""}